
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import newpackage.DB;
import newpackage.Handle;



/**
 *
 * @author  Hansa
 */
public class CheckStock02 extends javax.swing.JFrame {
    DefaultTableModel dt ;
    DefaultTableModel dt2 ;
    DefaultTableModel dt3 ;
    DefaultTableModel dt4 ;
    DefaultTableModel dt5 ;
    inpacks ip;
    int tabno = 0;
    int tableno =0;
    String selectedTable ;
    JTable Table ;
    EditFilters EF;
    EditOils EO;
    /** Creates new form CheckStock02 */
    public CheckStock02() {
       initComponents();
       setSize(970,750);
       setLocationRelativeTo(null);
       jTable2.setSelectionMode(0);
       jTable3.setSelectionMode(0);
       jTable4.setSelectionMode(0);
       jTable5.setSelectionMode(0);
       jTable6.setSelectionMode(0);
       refresh1();
       refresh2();
       refresh3();
       refresh4();
       refresh5();
       selectedTable = "Filters"; 
       Table = jTable2;
       
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stock / Item Details");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/3D GEARS GEAR7.png"))); // NOI18N
        jButton1.setText("    Show Packs");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 670, 170, 40));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/refreh.png"))); // NOI18N
        jButton2.setText("    Refersh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 670, 170, 40));

        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTabbedPane2MousePressed(evt);
            }
        });

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTabbedPane1MousePressed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Vehicle Model", "Vehicle Applications", "Unit Price", "Quantity On Hand"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.getTableHeader().setReorderingAllowed(false);
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable3MousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jTabbedPane1.addTab("Aircon Filters", jScrollPane3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Vehicle Model", "Vehicle Applications", "Unit Price", "Quantity On Hand"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.getTableHeader().setReorderingAllowed(false);
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable4MousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jTabbedPane1.addTab("Air Filters", jScrollPane4);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Vehicle Model", "Vehicle Applications", "Unit Price", "Quantity On Hand"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.getTableHeader().setReorderingAllowed(false);
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable5MousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTable5);

        jTabbedPane1.addTab("Fuel Filters", jScrollPane5);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Vehicle Model", "Vehicle Applications", "Unit Price", "Quantity On Hand"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable6.getTableHeader().setReorderingAllowed(false);
        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable6MousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(jTable6);

        jTabbedPane1.addTab("Oil Filters", jScrollPane6);

        jTabbedPane2.addTab("Filters", jTabbedPane1);

        jScrollPane2.setOpaque(false);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Company", "Product Name & Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jTabbedPane2.addTab("Oils", jScrollPane2);

        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 930, 580));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit_add.png"))); // NOI18N
        jButton3.setText("    Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 670, 170, 40));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete.png"))); // NOI18N
        jButton4.setText("Delete");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 670, 170, 40));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home.png"))); // NOI18N
        jButton5.setText("Back to Home");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 670, 170, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vistablue.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        refresh1(); 
        refresh2();
        refresh3();
        refresh4();
        refresh5();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       ip = new inpacks((String)dt.getValueAt(jTable2.getSelectedRow(), 2)); 
       ip.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
            tableno = jTabbedPane1.getSelectedIndex();
            tabno = 1;
            
            
            if (tableno==0) {
                selectedTable = "airconfilters";
                Table = jTable3;
            }
            if (tableno==1) 
                {selectedTable = "airfilters";
                 Table = jTable4;
                }
            if (tableno==2) 
                {
                selectedTable = "fuelfilters";
                Table = jTable5;
                }
            if (tableno==3) 
                {selectedTable = "oilfilters";
                Table = jTable6;
                }
           //System.out.println(selectedTable);
            
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        
        
    }//GEN-LAST:event_jTable3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if(jTabbedPane2.getSelectedIndex()==1){ 
        EO = new EditOils(this);
        EO.setVisible(true);
       }else{
           EF = new EditFilters(this);
           EF.setVisible(true);
           
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
       
       
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       int x =  JOptionPane.showConfirmDialog(this,"Are You Sure Want To Delete ?","Confirm Delete",0,1);
        if(x==0){
           removeFilters();  
        }else{
           
        }
        jButton2.doClick();
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
       
             jButton1.setEnabled(true); 
             jButton4.setEnabled(true); 
                   
        
    }//GEN-LAST:event_jTable2MousePressed

    private void jTabbedPane2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MousePressed
     if(jTabbedPane2.getSelectedIndex()==0){
            jTabbedPane1.setSelectedIndex(0);
            selectedTable  = "airconfilters";
            Table = jTable3;
        }else{
            selectedTable = "oils";
            Table = jTable2;
         
        }
        jButton1.setEnabled(false); 
        jButton4.setEnabled(false);
        jButton2.doClick();
          System.out.println("" + selectedTable);
    }//GEN-LAST:event_jTabbedPane2MousePressed

    private void jTable3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MousePressed
        jButton4.setEnabled(true);     
    }//GEN-LAST:event_jTable3MousePressed

    private void jTable4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MousePressed
        jButton4.setEnabled(true);
    }//GEN-LAST:event_jTable4MousePressed

    private void jTable5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MousePressed
        jButton4.setEnabled(true);
    }//GEN-LAST:event_jTable5MousePressed

    private void jTable6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MousePressed
        jButton4.setEnabled(true);
    }//GEN-LAST:event_jTable6MousePressed

    private void jTabbedPane1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MousePressed
        jButton4.setEnabled(false);
    }//GEN-LAST:event_jTabbedPane1MousePressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckStock02().setVisible(true);
            }
        });
    }
    
   void refresh1(){
         try {
            
            ResultSet rst=Handle.getData(DB.connect(), "select * from oils");
            Connection con=(Connection) DB.connect();
           
            dt = (DefaultTableModel) jTable2.getModel();
            
            int rw=dt.getRowCount();
            for (int i=0; i<rw;i++){
            dt.removeRow(0);
            }
            
            while(rst.next()){
                   Object ob[] = {rst.getString(1),rst.getString(2),rst.getString(3)};
                   dt.addRow(ob);
                   
            }
            
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
        void refresh2(){
         try {
            
            
            ResultSet rst=Handle.getData(DB.connect(), "select * from airconfilters");
            Connection con=(Connection) DB.connect();
            
            dt2 = (DefaultTableModel) jTable3.getModel();
            
            int rw=dt2.getRowCount();
            for (int i=0; i<rw;i++){
            dt2.removeRow(0);
            }
            
            while(rst.next()){
                   Object ob[] = {rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),rst.getString(5)};
                   dt2.addRow(ob);
                   
            }
            
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
        
        
        void refresh3(){
         try {
            
            
            ResultSet rst=Handle.getData(DB.connect(), "select * from airfilters");
            Connection con=(Connection) DB.connect();
            
            dt3 = (DefaultTableModel) jTable4.getModel();
            
            int rw=dt3.getRowCount();
            for (int i=0; i<rw;i++){
            dt3.removeRow(0);
            }
            
            while(rst.next()){
                   Object ob[] = {rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),rst.getString(5)};
                   dt3.addRow(ob);
                   
            }
            
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    
        
     void refresh4(){
         try {
            
            
            ResultSet rst=Handle.getData(DB.connect(), "select * from fuelfilters");
            Connection con=(Connection) DB.connect();
            
            dt4 = (DefaultTableModel) jTable5.getModel();
            
            int rw=dt4.getRowCount();
            for (int i=0; i<rw;i++){
            dt4.removeRow(0);
            }
            
            while(rst.next()){
                   Object ob[] = {rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),rst.getString(5)};
                   dt4.addRow(ob);
                   
            }           
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        }
    }         
    
  
     
     void refresh5(){
         try {
            
            
            ResultSet rst=Handle.getData(DB.connect(), "select * from oilfilters");
            Connection con=(Connection) DB.connect();
            
            dt5 = (DefaultTableModel) jTable6.getModel();
            
            int rw=dt5.getRowCount();
            for (int i=0; i<rw;i++){
            dt5.removeRow(0);
            }
            
            while(rst.next()){
                   Object ob[] = {rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),rst.getString(5)};
                   dt5.addRow(ob);
                   
            }           
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CheckStock02.class.getName()).log(Level.SEVERE, null, ex);
        }
    }   
    
     public void addFilters(String s[]){
          try{
              Handle.setData(DB.connect(),"insert into "+ selectedTable+"(" +selectedTable.substring(0, selectedTable.length()-1)+ "code,vehicle,vehicleapp,unitprice,qtyonhand) values('"+s[0]+"' , '"+s[1]+"' , '"+s[2]+"','"+s[3]+"' , '"+ s[4]+ " ')");
              Connection con=(Connection) DB.connect();
            


      
        jButton2.doClick();
        }catch(Exception e){
           e.printStackTrace();
        }
         
     }
     
     void removeFilters(){
                  try{
            
            String id = Table.getValueAt(Table.getSelectedRow(),0)+"";
            String veh = Table.getValueAt(Table.getSelectedRow(),1)+"";
            
            Handle.setData(DB.connect(), "delete from " + selectedTable +" where " + selectedTable.substring(0, selectedTable.length()-1) +"code = '"+ id + "' ");
            Connection con=(Connection) DB.connect();

            jButton2.doClick();
            }catch(Exception e){
                e.printStackTrace();
            }
     }
     
     public void addOils(String s[]){
         try{
            
            Handle.setData(DB.connect(), "insert into oils values('"+s[0]+"' , '"+s[1]+"' , '"+s[2]+"','"+s[3]+"' , '"+ s[4]+ " ', '"+ s[5]+ " ', '"+ s[6]+ " ', '"+ s[7]+ " ', '"+ s[8]+ " ', '"+ s[9]+ " ', '"+ s[10]+ " ', '"+ s[11]+ " ', '"+ s[12]+ " ', '"+ s[13]+ " ', '"+ s[14]+ " ', '"+ s[15]+ " ', '"+ s[16]+ " ', '"+ s[17]+ " ', '"+ s[18]+ " ', '"+ s[19]+ " ', '"+ s[20]+ " ', '"+ s[21]+ " ', '"+ s[22]+ " ', '"+ s[23]+ " ', '"+ s[24]+ " ', '"+ s[25]+ " ', '"+ s[26]+ " ', '"+ s[27]+ " ', '"+ s[28]+ " ', '"+ s[29]+ " ')");
            Connection con=(Connection) DB.connect();
            //oilcode,company,pdnmngd,210L_Drum_L78,200L_Drum_L73,20L_Pall_L33,5L_Can_L27_28,4LCan_L25,1L_Can_L19,500ML_Bottle_L06,350ML_Bootle,250ML_Bootle_L04,40ML_Sachet,170KG,180KG,15KG,500G,250G,100G,5L_Loose,4L_Loose,1L_Loose,500ML_Loose,250ML_Loose,100ML_Loose,10ML_Loose,20ML_Loose,30ML_Loose,40ML_Loose,50ML_Loose) values('"
        jButton2.doClick();
        }catch(Exception e){
           JOptionPane.showMessageDialog(this,"Something wrong. Incorrect Data Input","Something Wrong",JOptionPane.OK_OPTION);
        }
         
     }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    // End of variables declaration//GEN-END:variables
    
}
